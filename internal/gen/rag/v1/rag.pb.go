// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: rag/v1/rag.proto

package ragv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PreUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *PreUploadRequest) Reset() {
	*x = PreUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rag_v1_rag_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreUploadRequest) ProtoMessage() {}

func (x *PreUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rag_v1_rag_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreUploadRequest.ProtoReflect.Descriptor instead.
func (*PreUploadRequest) Descriptor() ([]byte, []int) {
	return file_rag_v1_rag_proto_rawDescGZIP(), []int{0}
}

func (x *PreUploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type PreUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadUrl string `protobuf:"bytes,1,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`
	FileKey   string `protobuf:"bytes,2,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	ExpiresIn int64  `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
}

func (x *PreUploadResponse) Reset() {
	*x = PreUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rag_v1_rag_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreUploadResponse) ProtoMessage() {}

func (x *PreUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rag_v1_rag_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreUploadResponse.ProtoReflect.Descriptor instead.
func (*PreUploadResponse) Descriptor() ([]byte, []int) {
	return file_rag_v1_rag_proto_rawDescGZIP(), []int{1}
}

func (x *PreUploadResponse) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

func (x *PreUploadResponse) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *PreUploadResponse) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type UploadPdfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文件键不能为空
	FileKey string `protobuf:"bytes,1,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	// 文件名不能为空且必须是PDF文件
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *UploadPdfRequest) Reset() {
	*x = UploadPdfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rag_v1_rag_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPdfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPdfRequest) ProtoMessage() {}

func (x *UploadPdfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rag_v1_rag_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPdfRequest.ProtoReflect.Descriptor instead.
func (*UploadPdfRequest) Descriptor() ([]byte, []int) {
	return file_rag_v1_rag_proto_rawDescGZIP(), []int{2}
}

func (x *UploadPdfRequest) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *UploadPdfRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type UploadPdfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DocumentId string `protobuf:"bytes,3,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
}

func (x *UploadPdfResponse) Reset() {
	*x = UploadPdfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rag_v1_rag_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPdfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPdfResponse) ProtoMessage() {}

func (x *UploadPdfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rag_v1_rag_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPdfResponse.ProtoReflect.Descriptor instead.
func (*UploadPdfResponse) Descriptor() ([]byte, []int) {
	return file_rag_v1_rag_proto_rawDescGZIP(), []int{3}
}

func (x *UploadPdfResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UploadPdfResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadPdfResponse) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

type GetContextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 查询字符串不能为空且长度限制
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetContextRequest) Reset() {
	*x = GetContextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rag_v1_rag_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextRequest) ProtoMessage() {}

func (x *GetContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rag_v1_rag_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextRequest.ProtoReflect.Descriptor instead.
func (*GetContextRequest) Descriptor() ([]byte, []int) {
	return file_rag_v1_rag_proto_rawDescGZIP(), []int{4}
}

func (x *GetContextRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type GetContextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context string `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *GetContextResponse) Reset() {
	*x = GetContextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rag_v1_rag_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextResponse) ProtoMessage() {}

func (x *GetContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rag_v1_rag_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextResponse.ProtoReflect.Descriptor instead.
func (*GetContextResponse) Descriptor() ([]byte, []int) {
	return file_rag_v1_rag_proto_rawDescGZIP(), []int{5}
}

func (x *GetContextResponse) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

var File_rag_v1_rag_proto protoreflect.FileDescriptor

var file_rag_v1_rag_proto_rawDesc = []byte{
	0x0a, 0x10, 0x72, 0x61, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x72, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xba,
	0x48, 0x24, 0x72, 0x22, 0x10, 0x01, 0x18, 0xff, 0x01, 0x32, 0x1b, 0x5e, 0x5b, 0x5e, 0x2f, 0x5c,
	0x5c, 0x3a, 0x2a, 0x3f, 0x22, 0x3c, 0x3e, 0x7c, 0x5d, 0x2b, 0x5c, 0x2e, 0x28, 0x70, 0x64, 0x66,
	0x7c, 0x50, 0x44, 0x46, 0x29, 0x24, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x6c, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x22, 0x7b,
	0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0xba, 0x48, 0x24, 0x72, 0x22, 0x10,
	0x01, 0x18, 0xff, 0x01, 0x32, 0x1b, 0x5e, 0x5b, 0x5e, 0x2f, 0x5c, 0x5c, 0x3a, 0x2a, 0x3f, 0x22,
	0x3c, 0x3e, 0x7c, 0x5d, 0x2b, 0x5c, 0x2e, 0x28, 0x70, 0x64, 0x66, 0x7c, 0x50, 0x44, 0x46, 0x29,
	0x24, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x11, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x64, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xe8, 0x07, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x2e, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x32, 0xd5, 0x01, 0x0a,
	0x0a, 0x52, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x50,
	0x72, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x2e, 0x72, 0x61, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x09, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x64, 0x66, 0x12, 0x18, 0x2e, 0x72, 0x61, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x64, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x19, 0x2e,
	0x72, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x61, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x68, 0x73, 0x6e, 0x30, 0x39, 0x31, 0x38, 0x2f, 0x72, 0x61, 0x67, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x72, 0x61, 0x67, 0x2f,
	0x76, 0x31, 0x3b, 0x72, 0x61, 0x67, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rag_v1_rag_proto_rawDescOnce sync.Once
	file_rag_v1_rag_proto_rawDescData = file_rag_v1_rag_proto_rawDesc
)

func file_rag_v1_rag_proto_rawDescGZIP() []byte {
	file_rag_v1_rag_proto_rawDescOnce.Do(func() {
		file_rag_v1_rag_proto_rawDescData = protoimpl.X.CompressGZIP(file_rag_v1_rag_proto_rawDescData)
	})
	return file_rag_v1_rag_proto_rawDescData
}

var file_rag_v1_rag_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_rag_v1_rag_proto_goTypes = []interface{}{
	(*PreUploadRequest)(nil),   // 0: rag.v1.PreUploadRequest
	(*PreUploadResponse)(nil),  // 1: rag.v1.PreUploadResponse
	(*UploadPdfRequest)(nil),   // 2: rag.v1.UploadPdfRequest
	(*UploadPdfResponse)(nil),  // 3: rag.v1.UploadPdfResponse
	(*GetContextRequest)(nil),  // 4: rag.v1.GetContextRequest
	(*GetContextResponse)(nil), // 5: rag.v1.GetContextResponse
}
var file_rag_v1_rag_proto_depIdxs = []int32{
	0, // 0: rag.v1.RagService.PreUpload:input_type -> rag.v1.PreUploadRequest
	2, // 1: rag.v1.RagService.UploadPdf:input_type -> rag.v1.UploadPdfRequest
	4, // 2: rag.v1.RagService.GetContext:input_type -> rag.v1.GetContextRequest
	1, // 3: rag.v1.RagService.PreUpload:output_type -> rag.v1.PreUploadResponse
	3, // 4: rag.v1.RagService.UploadPdf:output_type -> rag.v1.UploadPdfResponse
	5, // 5: rag.v1.RagService.GetContext:output_type -> rag.v1.GetContextResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rag_v1_rag_proto_init() }
func file_rag_v1_rag_proto_init() {
	if File_rag_v1_rag_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rag_v1_rag_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rag_v1_rag_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rag_v1_rag_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPdfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rag_v1_rag_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPdfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rag_v1_rag_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rag_v1_rag_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rag_v1_rag_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rag_v1_rag_proto_goTypes,
		DependencyIndexes: file_rag_v1_rag_proto_depIdxs,
		MessageInfos:      file_rag_v1_rag_proto_msgTypes,
	}.Build()
	File_rag_v1_rag_proto = out.File
	file_rag_v1_rag_proto_rawDesc = nil
	file_rag_v1_rag_proto_goTypes = nil
	file_rag_v1_rag_proto_depIdxs = nil
}
